{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","selectGood","good","setState","removeSelectedGood","this","className","classNames","type","onClick","map","isGoodSelected","removeOrAdd","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,OAFlB,EAKEC,WAAa,SAACC,GACZ,EAAKC,SAAS,CAAEH,aAAcE,KANlC,EASEE,mBAAqB,WACnB,EAAKD,SAAS,CAAEH,aAAc,MAVlC,4CAaE,WAAU,IAAD,OACCA,EAAiBK,KAAKN,MAAtBC,aAER,OACE,uBAAMM,UAAU,oBAAhB,UACE,oBACEA,UAAWC,IAAW,QAAS,CAC7B,UAAWP,EACX,wBAAyBA,IAH7B,SAMIA,EAGA,+CACMA,EADN,gBAEE,wBACE,aAAW,cACX,UAAQ,cACRQ,KAAK,SACLF,UAAU,cACVG,QAASJ,KAAKD,wBATlB,sBAeJ,uBAAOE,UAAU,QAAjB,SACE,gCACGT,EAAMa,KAAI,SAACR,GACV,IAAMS,EAAiBT,IAASF,EAC1BY,EAAcD,EAChB,eACA,YAEJ,OACE,qBAEE,UAAQ,OACRL,UAAWC,IAAW,CACpB,+BAAgCI,IAJpC,UAOE,6BACE,wBACE,UAASC,EACTJ,KAAK,SACLF,UAAWC,IAAW,SAAU,CAC9B,UAAWI,IAEbF,QAASE,EACL,EAAKP,mBACL,WACA,EAAKH,WAAWC,IATtB,SAYGS,EACG,IACA,QAIR,oBAAI,UAAQ,YAAYL,UAAU,eAAlC,SACGJ,MA1BEA,iBAlDvB,GAAyBW,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6997e620.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n  };\n\n  selectGood = (good:string) => {\n    this.setState({ selectedGood: good });\n  };\n\n  removeSelectedGood = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        <h1\n          className={classNames('title', {\n            'is-flex': selectedGood,\n            'is-align-items-center': selectedGood,\n          })}\n        >\n          {!selectedGood ? (\n            'No goods selected'\n          ) : (\n            <>\n              {`${selectedGood} is selected`}\n              <button\n                aria-label=\"Select good\"\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={this.removeSelectedGood}\n              />\n            </>\n          )}\n        </h1>\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map((good) => {\n              const isGoodSelected = good === selectedGood;\n              const removeOrAdd = isGoodSelected\n                ? 'RemoveButton'\n                : 'AddButton';\n\n              return (\n                <tr\n                  key={good}\n                  data-cy=\"Good\"\n                  className={classNames({\n                    'has-background-success-light': isGoodSelected,\n                  })}\n                >\n                  <td>\n                    <button\n                      data-cy={removeOrAdd}\n                      type=\"button\"\n                      className={classNames('button', {\n                        'is-info': isGoodSelected,\n                      })}\n                      onClick={isGoodSelected\n                        ? this.removeSelectedGood\n                        : () => {\n                          this.selectGood(good);\n                        }}\n                    >\n                      {isGoodSelected\n                        ? '-'\n                        : '+'}\n                    </button>\n                  </td>\n\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {good}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}